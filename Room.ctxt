#BlueJ class context
comment0.target=Room
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\ This\ class\ is\ part\ of\ the\ "Underground\ Base\ Escape"\ application.\ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes\ and\ Yichun\ Zhang\n\ @version\ 2016.02.29\n
comment1.params=name\ description\ isLocked
comment1.target=Room(java.lang.String,\ java.lang.String,\ boolean)
comment1.text=\n\ Create\ a\ room\ with\ its\ "name"\ and\ whether\ it\ is\ locked\n\ @param\ name\ The\ room's\ name.\n\ @param\ description\ The\ room's\ description\n\ @param\ isLocked\ Whether\ the\ room\ is\ locked\n
comment10.params=
comment10.target=java.lang.String\ getInfo()
comment10.text=\n\ Combine\ two\ strings\ describing\ the\ room's\ exits\ and\ items,\ for\ example\n\ "Exits\:\ north\ |\ west\ |\ \n\ \ Items\:\ Key\ |\ EnergyStone\ |"\n\ @return\ Details\ of\ the\ room's\ exits\ and\ items.\n
comment11.params=
comment11.target=java.lang.String\ getExitString()
comment11.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ |\ west\ |\ ".\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment12.params=
comment12.target=java.lang.String\ getItemString()
comment12.text=\n\ Return\ a\ string\ describing\ the\ room's\ items,\ for\ example\n\ "Items\:\ Key\ |\ EnergyStone\ |\ ".\n\ @return\ Details\ of\ the\ room's\ items.\n
comment13.params=
comment13.target=java.util.ArrayList\ getNeighbourRooms()
comment13.text=\ \n\ Get\ names\ of\ all\ neighbour\ rooms\ of\ the\ current\ room\n\ @return\ neighbours,\ an\ ArrayList\ of\ all\ the\ neighbours'\ names\n
comment14.params=direction
comment14.target=Room\ getExit(java.lang.String)
comment14.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment15.params=itemName\ totalWeight\ weightLimit
comment15.target=boolean\ pickUp(java.lang.String,\ int,\ int)
comment15.text=\n\ Return\ whether\ the\ item\ can\ be\ picked\ up\ (is\ overweight)\n\ @param\ itemName\ The\ name\ of\ the\ item\n\ @param\ totalWeight\ Total\ weight\ of\ items\ player\ carry\ with\n\ @param\ weightLimit\ Maximum\ total\ weight\ of\ items\ player\ can\ carry\ with\n\ @return\ true,\ if\ the\ item\ is\ overweight,\ false\ otherwise\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment3.params=itemName
comment3.target=void\ setItem(Item)
comment3.text=\n\ Define\ an\ item\ from\ this\ room.\n\ @param\ itemName\ The\ name\ of\ the\ item.\n
comment4.params=
comment4.target=java.lang.String\ getDescriptionUnlocked()
comment4.text=\n\ @return\ A\ long\ description\ of\ the\ unlocked\ room\n
comment5.params=lockedRoomName
comment5.target=java.lang.String\ getDescriptionLocked(Room)
comment5.text=\n\ @return\ A\ long\ description\ of\ the\ locked\ room\n
comment6.params=
comment6.target=java.lang.String\ getRoomName()
comment6.text=\n\ @return\ Name\ of\ the\ room\n
comment7.params=
comment7.target=java.lang.String\ getdescription()
comment7.text=\n\ @return\ Description\ of\ the\ room\n
comment8.params=
comment8.target=boolean\ getIsLocked()
comment8.text=\ \n\ @return\ true,\ if\ the\ room\ is\ locked,\ false\ otherwise\n
comment9.params=
comment9.target=void\ setUnlocked()
comment9.text=\ \n\ Define\ the\ room\ is\ inlocked\n
numComments=16
